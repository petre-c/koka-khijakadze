@page "/"
@namespace L5.XAF.Blazor.Server.Pages
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@using DevExpress.ExpressApp.Blazor.Components
@using L5.XAF.Blazor.Server
@using Microsoft.AspNetCore.Mvc.TagHelpers

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8"/>
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, shrink-to-fit=no"/>
    <meta name="apple-mobile-web-app-capable" content="yes"/>
    <!-- meta name="theme-color" content="#000000" -->
    <title>AppifySheets.Blazor</title>
    <base href="~/"/>
    <!-- Google Tag Manager -->
    <script>
        (function(w, d, s, l, i) {
            w[l] = w[l] || []; w[l].push({
                'gtm.start':
                    new Date().getTime(), event: 'gtm.js'
            }); var f = d.getElementsByTagName(s)[0],
                j = d.createElement(s), dl = l !== 'dataLayer' ? '&l=' + l : ''; j.async = true; j.src =
                    'https://www.googletagmanager.com/gtm.js?id=' + i + dl; f.parentNode.insertBefore(j, f);
        })(window, document, 'script', 'dataLayer', 'GTM-TP4P4KW');
    </script>
    <!-- End Google Tag Manager -->
    <component type="typeof(BootstrapThemeLink)" render-mode="Static"/>
</head>
<body>
<!-- Google Tag Manager (noscript) -->
<noscript>
    <iframe src="https://www.googletagmanager.com/ns.html?id=GTM-TP4P4KW"
            height="0" width="0" style='display:none;visibility:hidden'>
    </iframe>
</noscript>
<!-- End Google Tag Manager (noscript) -->
@{
    Response.Headers["Cache-Control"] = "no-store";
    string userAgent = Request.Headers["User-Agent"];
    // ReSharper disable once InconsistentNaming
    var isIE = userAgent.Contains("MSIE") || userAgent.Contains("Trident");
}
@if (isIE)
{
    <link href="css/site.css" rel="stylesheet"/>
    <div class="d-flex flex-column justify-content-center align-items-center h-100">
        <div class="d-flex">
            <img class="mt-2 mr-4" src="_content/DevExpress.ExpressApp.Blazor/images/Sad.svg" width="60" height="60" alt=""/>
            <div>
                <div class="h1">Internet Explorer is not supported.</div>
                <p style="font-size: 1rem; opacity: 0.75;" class="m-0">Application cannot be loaded in Internet Explorer.<br>Please use a different browser.</p>
            </div>
        </div>
    </div>
}
else
{
    <component type="typeof(SplashScreen)" render-mode="Static" param-Caption='@StaticSettings.ApplicationName' param-ImagePath='"images/SplashScreen.svg"'/>

    <link href="_content/DevExpress.ExpressApp.Blazor/styles.css" rel="stylesheet"/>
    <link href="css/site.css" rel="stylesheet"/>
    <script src="_content/DevExpress.ExpressApp.Blazor/scripts.js"></script>

    <app class="d-none">
        <component type="typeof(App)" render-mode="Server"/>
    </app>

    <component type="typeof(AlertsHandler)" render-mode="Server"/>

    <div id="blazor-error-ui">
        <component type="typeof(BlazorError)" render-mode="Static"/>
    </div>

    <script src="_framework/blazor.server.js"></script>

    <script>
    // Wait until a 'reload' button appears
        new MutationObserver((mutations, observer) => {
            if (document.querySelector('#components-reconnect-modal h5 a')) {
                // Now every 10 seconds, see if the server appears to be back, and if so, reload
                async function attemptReload() {
                    await fetch(''); // Check the server really is back
                    location.reload();
                }
                observer.disconnect();
                attemptReload();
                setInterval(attemptReload, 5000);
            }
        }).observe(document.body, { childList: true, subtree: true });
    </script>

    <script>
        window.hideNavBarOnLoad = () => {
            // if (window.outerWidth > 800)
                xaf.toggleSideBar();
        }
        
        function saveAsFile(fileName, byteBase64) {
                    const link = document.createElement('a');
                    link.download = fileName;
                    link.href = 'data:application/vnd.openxmlformats-pfficedocument.spreadsheetml.sheet;base64,' + byteBase64;
                    document.body.appendChild(link);
                    link.click();
                    document.body.removeChild(link);
                    }
    </script>
}
</body>
</html>